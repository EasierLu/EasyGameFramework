
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace Hotfix.Common.Data
{
    public sealed partial class ExtendStruct : Luban.BeanBase
    {
        public ExtendStruct(ByteBuf _buf) 
        {
            Id = _buf.ReadInt();
            R1 = _buf.ReadInt();
            R1_Ref = null;
            X2 = Example.Bean_Sep.DeserializeBean_Sep(_buf);
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);X4 = new System.Collections.Generic.Dictionary<Item.ItemQuality, Example.Bean_Sep>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { Item.ItemQuality _k0;  _k0 = (Item.ItemQuality)_buf.ReadInt(); Example.Bean_Sep _v0;  _v0 = Example.Bean_Sep.DeserializeBean_Sep(_buf);     X4.Add(_k0, _v0);}}
        }

        public static ExtendStruct DeserializeExtendStruct(ByteBuf _buf)
        {
            return new ExtendStruct(_buf);
        }

        public readonly int Id;
        /// <summary>
        /// 直接引用另一张表里的数据
        /// </summary>
        public readonly int R1;
        public ExampleItemData R1_Ref;
        /// <summary>
        /// 注意这里是因为Beans表配置了分隔符
        /// </summary>
        public readonly Example.Bean_Sep X2;
        /// <summary>
        /// 通过枚举来索引一个道具以及数量，注意这里是因为Beans表配置了分隔符
        /// </summary>
        public readonly System.Collections.Generic.Dictionary<Item.ItemQuality, Example.Bean_Sep> X4;
    
        public const int __ID__ = -280539217;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef(Tables tables)
        {
            
            R1_Ref = tables.TbExampleItemData.GetOrDefault(R1);
            
            
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "r1:" + R1 + ","
            + "x2:" + X2 + ","
            + "x4:" + Luban.StringUtil.CollectionToString(X4) + ","
            + "}";
        }
    }

}
